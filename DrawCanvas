package com.example.myproject.canvas.impl;

import org.springframework.stereotype.Component;

import com.example.myproject.canvas.exception.CanvasException;

@Component
public class DrawCanvas {


	private int width; // eg of width 20
	private int height; // eg of height 4
	
	//convasValues will like eg: [4] [20]
	private String [][] convasValues;
	
	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getHeight() {
		return height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	public String[][] getConvasValues() {
		return convasValues;
	}

	public void setConvasValues(String[][] convasValues) {
		this.convasValues = convasValues;
	}

	//drawConvas.drawShape(, );


	public boolean isNumeric(final String str) {
        // null or empty
        if (str == null || str.length() == 0) {
            return false;
        }
        return str.chars().allMatch(Character::isDigit);
    }
	
	private void drawShapeValidateArguments( final String [] cmd ) {
		
		//expect 2 arguments to be passed 
		if (null == cmd || cmd.length < 3) {
			throw new CanvasException("invalid arguments need width and heigth!!");
		}
		
		if ( (!isNumeric(cmd[1])) || (!isNumeric(cmd[2]))  )  {
			throw new CanvasException("invalid numeric argument to build canvas!!!");
		}

		//intialize
		height = Integer.parseInt(cmd[2]);
		width = Integer.parseInt(cmd[1]);

	}
	
	public void drawShape( final String [] cmd ) {

		drawShapeValidateArguments(cmd);
		
		int heightBoundary = height+ 2;
		int widthBoundary =  width + 2;
		
		//convasValues will like eg: [4] [20]
		convasValues = new String[heightBoundary] [widthBoundary];

		if (height < 1 || width < 1 || null == convasValues || convasValues.length < 3 ) {
			throw new CanvasException("invalid boundaries width:" + width + " height:" + height);
		}

		for(int j=0; j < widthBoundary; j++ ) {
			convasValues[0][j] = "-";
			convasValues[height + 1][j] = "-";
		}
	
		for(int j=1; j < heightBoundary-1; j++ ) {
			convasValues[j][0] = "|";
			convasValues[j][width+1] = "|";
			
		}
	}


	public void printValues() {
		
		for(int i=0; i < height+2; i++ ) {

			System.out.println();
			for (int j=0 ; j < width+2 ; j++) {
				
				System.out.print(null != convasValues[i][j] && !convasValues[i][j].isEmpty()?convasValues[i][j]:" ");
			}
		}
	}

	
}
